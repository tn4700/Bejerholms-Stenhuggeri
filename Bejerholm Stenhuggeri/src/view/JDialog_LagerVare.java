/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import control.DatabaseObjectHandler;
import java.awt.Color;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import model.Vare;
import model.Varegruppe;
import model.Varetype;

/**
 *
 * @author NiklasRenner
 */
public class JDialog_LagerVare extends javax.swing.JDialog {

    private Boolean dialogType;
    private ArrayList<Varegruppe> vareGruppeListe;
    private ArrayList<Varetype> vareTypeListe;
    private Vare vare;
    private DatabaseObjectHandler dbhandler;

    /**
     * Creates new form JDialog_OpretVare
     */
    public JDialog_LagerVare(java.awt.Frame parent, boolean modal, DatabaseObjectHandler dbhandler) {
        super(parent, modal);
        dialogType = true;
        this.dbhandler = dbhandler;
        this.setTitle("Opret vare");
        initComponents();
        fyldGruppeListe();
        fyldTypeListe();
        this.setLocationRelativeTo(parent);
    }

    public JDialog_LagerVare(java.awt.Frame parent, boolean modal, DatabaseObjectHandler dbhandler, Vare vare) {
        super(parent, modal);
        dialogType = false;
        this.setTitle("Rediger vare");
        this.dbhandler = dbhandler;
        this.vare = vare;
        initComponents();
        this.setLocationRelativeTo(parent);
        fyldGruppeListe();
        fyldTypeListe();
        enterVareInfo(vare);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        vareInfoOverskriftLabel1 = new javax.swing.JLabel();
        vareInfoPanel = new javax.swing.JPanel();
        annullerButton = new javax.swing.JButton();
        opretVareButton = new javax.swing.JButton();
        vareHøjdeLabel = new javax.swing.JLabel();
        vareNavnLabel = new javax.swing.JLabel();
        vareBreddeLabel = new javax.swing.JLabel();
        indkøbsPrisLabel = new javax.swing.JLabel();
        typeNavnLabel = new javax.swing.JLabel();
        salgsPrisLabel = new javax.swing.JLabel();
        overfladeLabel = new javax.swing.JLabel();
        vareHøjdeTextField = new javax.swing.JTextField();
        vareNavnTextField = new javax.swing.JTextField();
        vareBreddeTextField = new javax.swing.JTextField();
        indkøbsPrisTextField = new javax.swing.JTextField();
        salgsPrisTextField = new javax.swing.JTextField();
        vareStatusLabel = new javax.swing.JLabel();
        dekorationLabel = new javax.swing.JLabel();
        vareGruppeLabel = new javax.swing.JLabel();
        vælgVareGruppeComboBox = new javax.swing.JComboBox();
        overFladeComboBox = new javax.swing.JComboBox();
        dekorationComboBox = new javax.swing.JComboBox();
        vareStatusComboBox = new javax.swing.JComboBox();
        vareTypeComboBox = new javax.swing.JComboBox();
        errorLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        vareInfoOverskriftLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        vareInfoOverskriftLabel1.setText("Vareinfo");
        vareInfoOverskriftLabel1.setToolTipText("lol");

        vareInfoPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        vareInfoPanel.setOpaque(false);
        vareInfoPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        annullerButton.setText("Annuller");
        annullerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                annullerButtonActionPerformed(evt);
            }
        });
        vareInfoPanel.add(annullerButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(268, 174, -1, -1));

        opretVareButton.setText("Bekræft ");
        opretVareButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opretVareButtonActionPerformed(evt);
            }
        });
        vareInfoPanel.add(opretVareButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(345, 174, -1, -1));

        vareHøjdeLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        vareHøjdeLabel.setText("Højde");
        vareInfoPanel.add(vareHøjdeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(275, 42, -1, -1));

        vareNavnLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        vareNavnLabel.setText("Vare navn");
        vareInfoPanel.add(vareNavnLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 16, 60, -1));

        vareBreddeLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        vareBreddeLabel.setText("Bredde");
        vareInfoPanel.add(vareBreddeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(269, 68, -1, -1));

        indkøbsPrisLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        indkøbsPrisLabel.setText("Købspris");
        vareInfoPanel.add(indkøbsPrisLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 68, 60, -1));

        typeNavnLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        typeNavnLabel.setText("Varetype");
        vareInfoPanel.add(typeNavnLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 146, 60, -1));

        salgsPrisLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        salgsPrisLabel.setText("Salgspris");
        vareInfoPanel.add(salgsPrisLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 94, 60, -1));

        overfladeLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        overfladeLabel.setText("Overflade");
        vareInfoPanel.add(overfladeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(255, 94, -1, -1));

        vareHøjdeTextField.setText("0");
        vareInfoPanel.add(vareHøjdeTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(321, 39, 110, -1));
        vareInfoPanel.add(vareNavnTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(86, 13, 345, -1));

        vareBreddeTextField.setText("0");
        vareInfoPanel.add(vareBreddeTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(321, 65, 110, -1));

        indkøbsPrisTextField.setText("0.00");
        vareInfoPanel.add(indkøbsPrisTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(86, 65, 141, -1));

        salgsPrisTextField.setText("0.00");
        vareInfoPanel.add(salgsPrisTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(86, 91, 141, -1));

        vareStatusLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        vareStatusLabel.setText("Varestatus");
        vareInfoPanel.add(vareStatusLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 120, 60, -1));

        dekorationLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        dekorationLabel.setText("Dekoration");
        vareInfoPanel.add(dekorationLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(251, 120, -1, -1));

        vareGruppeLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        vareGruppeLabel.setText("Vare grp.");
        vareInfoPanel.add(vareGruppeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 42, 60, -1));

        vareInfoPanel.add(vælgVareGruppeComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(86, 39, 141, -1));

        overFladeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "Ru", "Poleret" }));
        vareInfoPanel.add(overFladeComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(321, 91, 110, -1));

        dekorationComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ja", "Nej" }));
        vareInfoPanel.add(dekorationComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(321, 117, 110, -1));

        vareStatusComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "På lager", "Reserveret", "Solgt" }));
        vareInfoPanel.add(vareStatusComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(86, 117, 141, -1));

        vareInfoPanel.add(vareTypeComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(86, 143, 345, -1));

        errorLabel.setForeground(new java.awt.Color(255, 0, 0));
        errorLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(vareInfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(vareInfoOverskriftLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(errorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(vareInfoOverskriftLabel1)
                    .addComponent(errorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(vareInfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void annullerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_annullerButtonActionPerformed
        boolean accept = visAcceptDialog("Er du sikker på at du vil annullere?", "Annuller ændring");
        if (accept) {
            this.dispose();
        }
    }//GEN-LAST:event_annullerButtonActionPerformed

    private void opretVareButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opretVareButtonActionPerformed
        if (validerVareInput()) {
            if (dialogType) {
                try {
                    vare = new Vare(0, null, 0, 0, 0, 0, null, 0, false, 0, null);
                    setVare();
                    String message = "Er du sikker på at du vil oprette varen '" + vare.getNavn().replace("\\", "") + "'?";
                    boolean accept = visAcceptDialog(message, "Bekræft oprettelse");
                    if (accept) {
                        dbhandler.createVare(vare);
                        this.dispose();
                    }
                } catch (SQLException ex) {
                    errorLabel.setText("Problem med databasen, hold over den besked for detaljer");
                    errorLabel.setToolTipText(ex.getMessage());
                }
            } else {
                String message = "Er du sikker på at du vil redigere varen '" + vare.getNavn().replace("\\", "") + "'?";
                boolean accept = visAcceptDialog(message, "Bekræft redigering");
                if (accept) {
                    setVare();
                    try {
                        dbhandler.editVare(vare);
                        this.dispose();
                    } catch (SQLException ex) {
                        errorLabel.setText("Problem med databasen, hold over den besked for detaljer");
                        errorLabel.setToolTipText(ex.getMessage());
                    }
                }
            }
        }
    }//GEN-LAST:event_opretVareButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton annullerButton;
    private javax.swing.JComboBox dekorationComboBox;
    private javax.swing.JLabel dekorationLabel;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JLabel indkøbsPrisLabel;
    private javax.swing.JTextField indkøbsPrisTextField;
    private javax.swing.JButton opretVareButton;
    private javax.swing.JComboBox overFladeComboBox;
    private javax.swing.JLabel overfladeLabel;
    private javax.swing.JLabel salgsPrisLabel;
    private javax.swing.JTextField salgsPrisTextField;
    private javax.swing.JLabel typeNavnLabel;
    private javax.swing.JLabel vareBreddeLabel;
    private javax.swing.JTextField vareBreddeTextField;
    private javax.swing.JLabel vareGruppeLabel;
    private javax.swing.JLabel vareHøjdeLabel;
    private javax.swing.JTextField vareHøjdeTextField;
    private javax.swing.JLabel vareInfoOverskriftLabel1;
    private javax.swing.JPanel vareInfoPanel;
    private javax.swing.JLabel vareNavnLabel;
    private javax.swing.JTextField vareNavnTextField;
    private javax.swing.JComboBox vareStatusComboBox;
    private javax.swing.JLabel vareStatusLabel;
    private javax.swing.JComboBox vareTypeComboBox;
    private javax.swing.JComboBox vælgVareGruppeComboBox;
    // End of variables declaration//GEN-END:variables

    public boolean visAcceptDialog(String message, String title) {
        boolean accept = false;
        String[] options = new String[]{"Ja", "Nej"};
        int reply = JOptionPane.showOptionDialog(this, message, title, JOptionPane.DEFAULT_OPTION,
                JOptionPane.WARNING_MESSAGE, null, options, options[0]);
        if (reply == JOptionPane.YES_OPTION) {
            accept = true;
        }
        return accept;
    }

    public final void enterVareInfo(Vare vare) {
        vareNavnTextField.setText(vare.getNavn());
        vareBreddeTextField.setText(vare.getBredde() + "");
        vareHøjdeTextField.setText(vare.getHøjde() + "");
        indkøbsPrisTextField.setText(vare.getIndkøbspris() + "");
        salgsPrisTextField.setText(vare.getSalgspris() + "");
        overFladeComboBox.setSelectedIndex(vare.getOverflade());
        if(vare.getVaretype()!=null){
        vareTypeComboBox.setSelectedIndex(vare.getVaretype().getId());
        }
        vareStatusComboBox.setSelectedIndex(vare.getVareStatus());
        if (vare.getDekoration()) {
            dekorationComboBox.setSelectedIndex(0);
        } else {
            dekorationComboBox.setSelectedIndex(1);
        }
        vælgVareGruppeComboBox.setSelectedIndex(vare.getGruppe().getGrp_nr() - 1);
    }

    public void setVare() {
        vare.setNavn(vareNavnTextField.getText().trim().replace("'", "\\'"));
        vare.setIndkøbspris(Double.parseDouble(indkøbsPrisTextField.getText()));
        vare.setSalgspris(Double.parseDouble(salgsPrisTextField.getText()));
        vare.setBredde(Integer.parseInt(vareBreddeTextField.getText()));
        vare.setHøjde(Integer.parseInt(vareHøjdeTextField.getText()));
        if (vareTypeComboBox.getSelectedIndex() == 0) {
            vare.setVaretype(null);
        } else {
            vare.setVaretype((Varetype) vareTypeComboBox.getSelectedItem());
        }
        vare.setVareStatus(vareStatusComboBox.getSelectedIndex());
        if (dekorationComboBox.getSelectedIndex() == 0) {
            vare.setDekoration(true);
        } else {
            vare.setDekoration(false);
        }
        vare.setGruppe((Varegruppe) vælgVareGruppeComboBox.getSelectedItem());
        vare.setOverflade(overFladeComboBox.getSelectedIndex());
    }

    public final void fyldGruppeListe() {
        try {
            vareGruppeListe = dbhandler.getVaregruppeListe();
            for (int i = 0; i < vareGruppeListe.size(); i++) {
                vælgVareGruppeComboBox.addItem(vareGruppeListe.get(i));
            }
        } catch (SQLException ex) {
            errorLabel.setText("Problem med databasen, hold over den besked for detaljer");
            errorLabel.setToolTipText(ex.getMessage());
        }
    }

    public final void fyldTypeListe() {
        try {
            vareTypeListe = dbhandler.getVaretypeListe();
            vareTypeComboBox.addItem("Ingen type.");
            for (int i = 0; i < vareTypeListe.size(); i++) {
                vareTypeComboBox.addItem(vareTypeListe.get(i));
            }
        } catch (SQLException ex) {
            errorLabel.setText("Problem med databasen, hold over den besked for detaljer");
            errorLabel.setToolTipText(ex.getMessage());
        }
    }

    public void resetErrors() {
        vareNavnLabel.setForeground(Color.black);
        vareBreddeLabel.setForeground(Color.black);
        vareHøjdeLabel.setForeground(Color.black);
        indkøbsPrisLabel.setForeground(Color.black);
        salgsPrisLabel.setForeground(Color.black);
        typeNavnLabel.setForeground(Color.black);
        errorLabel.setText("");
    }

    public String validerString(String string) {
        String newString = string.replace("\\", "");
        return newString;
    }

    public boolean validerVareInput() {
        boolean valid = true;
        resetErrors();
        String error = "Fejl på følgende input: ";
        boolean isNotFirst = false;

        if (vareNavnTextField.getText().equals("")) {
            vareNavnLabel.setForeground(Color.red);
            error += vareNavnLabel.getText();
            valid = false;
            isNotFirst = true;
        } else {
            String old = vareNavnTextField.getText();
            String news = validerString(vareNavnTextField.getText().trim());
            if (!old.equals(news)) {
                vareNavnTextField.setText(validerString(vareNavnTextField.getText().trim()));
                vareNavnLabel.setForeground(Color.red);
                error += vareNavnLabel.getText() + "(Fjernet specialtegn)";
                valid = false;
                isNotFirst = true;
            }
        }
        try {
            Integer.parseInt(vareBreddeTextField.getText());
        } catch (NumberFormatException ex) {
            vareBreddeLabel.setForeground(Color.red);
            if (isNotFirst) {
                error += ", ";
            }
            error += vareBreddeLabel.getText();
            isNotFirst = true;
            valid = false;
        }
        try {
            Integer.parseInt(vareHøjdeTextField.getText());
        } catch (NumberFormatException ex) {
            vareHøjdeLabel.setForeground(Color.red);
            if (isNotFirst) {
                error += ", ";
            }
            error += vareHøjdeLabel.getText();
            isNotFirst = true;
            valid = false;
        }
        try {
            Double.parseDouble(indkøbsPrisTextField.getText());
        } catch (NumberFormatException ex) {
            indkøbsPrisLabel.setForeground(Color.red);
            if (isNotFirst) {
                error += ", ";
            }
            error += indkøbsPrisLabel.getText();
            isNotFirst = true;
            valid = false;
        }
        try {
            Double.parseDouble(salgsPrisTextField.getText());
        } catch (NumberFormatException ex) {
            salgsPrisLabel.setForeground(Color.red);
            if (isNotFirst) {
                error += ", ";
            }
            error += salgsPrisLabel.getText();
            valid = false;

        }
        if (!valid) {
            errorLabel.setText("Fejl i input, hold over denne besked for detaljer.");
            errorLabel.setToolTipText(error);
        }
        return valid;
    }
}
